class Solution {

    public String findShortestCommonSupersequence(String s1, String s2){
        int m = s1.length();
        int n = s2.length();
        int dp[][] =  new int[m+1][n+1];
        for(int i=0;i<m;i++)
            dp[i][0] = 0;
        for(int j=0;j<n;j++)
            dp[0][j] = 0;
        
        for(int index1=1; index1<=m; index1++){
            for(int index2=1; index2<=n; index2++){
                if(s1.charAt(index1-1)==s2.charAt(index2-1))
                    dp[index1][index2] = 1+dp[index1-1][index2-1];
                else
                    dp[index1][index2] = Math.max(dp[index1-1][index2],dp[index1][index2-1]);
            }
        }

        int index1 = m;
        int index2 = n;
        String strSuper = "";
        while(index1>0 && index2>0){
            if(s1.charAt(index1-1)==s2.charAt(index2-1)){
                strSuper = s1.charAt(index1-1)+strSuper;
                index1--;
                index2--;
            }else if(dp[index1-1][index2]>dp[index1][index2-1]){
                //UP
                strSuper = s1.charAt(index1-1) + strSuper;
                index1--;
            }else{
                //LEFT
                strSuper = s2.charAt(index2-1) + strSuper;
                index2--;
            }  
        }
        while(index1>0){
            strSuper = s1.charAt(index1-1) + strSuper; 
            index1--;
        }
        while(index2>0){
            strSuper = s2.charAt(index2-1) + strSuper; 
            index2--;
        }
        return strSuper;
    }
    
    public String shortestCommonSupersequence(String str1, String str2) {
        return findShortestCommonSupersequence(str1, str2);
    }
}
