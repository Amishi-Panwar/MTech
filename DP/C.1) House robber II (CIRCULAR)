class Solution {
    public int f(int nums[]){
        int prev2 = 0;
        int prev = nums[0];
        for(int i=1;i<nums.length;i++){
            int pick = nums[i] + prev2;
            int nonpick = prev;
            int curr = Math.max(pick, nonpick);
            prev2 = prev;
            prev =  curr;
        }
        return prev;
    }

    public int rob(int[] nums) {

        if(nums.length == 1)
            return nums[0];
        int temp1[] = new int[nums.length-1];
        int temp2[] = new int[nums.length-1];
        for(int i=0;i<nums.length;i++){
            if(i!=nums.length-1)
                temp1[i] = nums[i];
            if(i!=0)
                temp2[i-1] =  nums[i];
        }

        return Math.max(f(temp1), f(temp2));
    }
}
