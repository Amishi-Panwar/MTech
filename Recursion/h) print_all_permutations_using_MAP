class Solution {
    public void permuteUtil(int nums[], int map[], List<Integer>ds, List<List<Integer>>result){
        if(ds.size() == nums.length){
            result.add(new ArrayList<>(ds));
            return;
        }
        
        //run loop to check if element is not added
        for(int i=0;i<nums.length;i++){
            if(map[i]==0){
                ds.add(nums[i]);
                map[i]=1;
                permuteUtil(nums,map,ds,result);
                map[i]=0;
                ds.remove(ds.size()-1);
            }
        }
    }
    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> result = new ArrayList<>();
        List<Integer> ds = new ArrayList<>();
        int map[] = new int[nums.length];
        permuteUtil(nums, map,ds,result);
        return result;
    }
}
