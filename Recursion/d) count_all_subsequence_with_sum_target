import java.util.*;
public class Main
{
    public static int count_all_subsequence_with_sum_target(int index, int n, int arr[], int sum, int target){
    
    	//can be done only if array contains +ve integers
	if(sum > target)
		return 0;
	
        //if base condition satisfied return 1 
        if(index == n){
            if(sum == target){
                return 1;
            }
            
        //else return 0    
        return 0;
        }
        
        sum += arr[index];
        int left = count_all_subsequence_with_sum_target(index+1, n, arr, sum, target);
        sum -= arr[index];
        int right = count_all_subsequence_with_sum_target(index+1, n, arr, sum, target);
        return left+right;
        
    }
	public static void main(String[] args) {
	    int arr[] = new int[]{1,2,1};
	    int target = 2;
	    System.out.println(count_all_subsequence_with_sum_target(0, 3, arr, 0, target));
	}
}


//if multiple recursion rather then only left and right do-
//for(int i=0;i<n;i++)
//	s+=f();
//return s;
