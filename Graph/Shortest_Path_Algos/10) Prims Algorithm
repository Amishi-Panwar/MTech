
// User function Template for Java
class Pair{
    int first;
    int second;
    Pair(int _first, int _second){
        first = _first;
        second = _second;
    }
}
class Solution{
	static int spanningTree(int V, int E, int edges[][]){
	     ArrayList<ArrayList<Pair>> adj = new ArrayList<>();
	     for(int i=0;i<V;i++)
	        adj.add(new ArrayList<>());
	        
	     for(int i=0;i<E;i++){
	         adj.get(edges[i][0]).add(new Pair(edges[i][1], edges[i][2]));
	         adj.get(edges[i][1]).add(new Pair(edges[i][0], edges[i][2]));
	     }
	     
	     PriorityQueue<Pair> pq = new PriorityQueue<>((a,b)->a.second-b.second);
	     pq.add(new Pair(0,0));
	     int visited[] = new int[V];
	     Arrays.fill(visited,-1);
	     int sum=0;
	     while(!pq.isEmpty()){
	         Pair p = pq.poll();
	         int node = p.first;
	         if(visited[node]==1)
	            continue;
	         visited[node]=1;
	         sum+=p.second;
             for(Pair it: adj.get(node)){
                 if(visited[it.first]==-1)
                    pq.add(new Pair(it.first,it.second));
             }
	     }
	     return sum;
	}
}
