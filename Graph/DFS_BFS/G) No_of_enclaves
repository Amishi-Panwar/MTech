class Solution {
    public void dfs(int r, int c, int m, int n, int board[][], int visited[][]){
        int dirR[] = new int[]{0,-1,0,1};
        int dirC[] = new int[]{-1,0,1,0};
        visited[r][c]=1;
        for(int i=0;i<4;i++){
            int nr = r+dirR[i];
            int nc = c+dirC[i];
            if(nr>=0 && nr<m && nc>=0 && nc<n && board[nr][nc]==1 && visited[nr][nc]==0){
                dfs(nr,nc,m,n,board,visited);
            }
        }
    }
    public int numEnclaves(int[][] grid) {
        int m = grid.length;
        int n = grid[0].length;
        int visited[][] = new int[m][n];

        for(int i=0;i<m;i++){
            if(grid[i][0]==1 && visited[i][0]==0){
                    dfs(i,0,m,n,grid,visited);
            }
            if(grid[i][n-1]==1 && visited[i][n-1]==0){
                    dfs(i,n-1,m,n,grid,visited);
            }
        }

        for(int j=0;j<n;j++){
            if(grid[0][j]==1 && visited[0][j]==0){
                    dfs(0,j,m,n,grid,visited);
            }
            if(grid[m-1][j]==1 && visited[m-1][j]==0){
                dfs(m-1,j,m,n,grid,visited);
            }
        }
        int count=0;
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(visited[i][j]==0 && grid[i][j]==1)
                    count++;
            }
        }
        return count;
    }
}
