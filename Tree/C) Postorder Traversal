/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
// class Solution {
//     public List<Integer> postorderTraversal(TreeNode root) {
//         List<Integer> answer = new ArrayList<>();
//         Stack<TreeNode> stack = new Stack<>();
//         if(root == null)
//             return answer;
//         stack.add(root);
//         while(!stack.isEmpty()){
//             TreeNode curr = stack.pop();
//             answer.add(0,curr.val);
//             if(curr.left!= null)
//                 stack.add(curr.left);
//             if(curr.right!=null)
//                 stack.add(curr.right);
//         }
//         return answer;
//     }
// }

class Solution {
    public void helper(TreeNode root, List<Integer>answer){
        if(root == null)
            return ;
        helper(root.left, answer);
        helper(root.right, answer);
        answer.add(root.val);
    }
    public List<Integer> postorderTraversal(TreeNode root) {
        List<Integer> answer = new ArrayList<>();
        helper(root, answer);
        return answer;
    }
}
